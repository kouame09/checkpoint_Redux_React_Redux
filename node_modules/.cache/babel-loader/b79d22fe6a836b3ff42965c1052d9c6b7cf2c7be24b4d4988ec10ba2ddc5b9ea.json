{"ast":null,"code":"const initialState = {\n  tasks: [] // initialisez tasks comme un tableau vide ou avec des tâches initiales\n};\n\nconst taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_TASK':\n      return {\n        ...state,\n        tasks: [...state.tasks, {\n          ...action.payload,\n          id: state.tasks.length + 1,\n          isDone: false\n        }]\n      };\n    case 'TOGGLE_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task.id === action.payload ? {\n          ...task,\n          isDone: !task.isDone\n        } : task)\n      };\n    case 'DELETE_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.filter(task => task.id !== action.payload)\n      };\n    case 'EDIT_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task.id === action.payload.taskId ? {\n          ...task,\n          description: action.payload.updatedDescription\n        } : task)\n      };\n    default:\n      return state;\n  }\n};\nexport default taskReducer;","map":{"version":3,"names":["initialState","tasks","taskReducer","state","action","type","payload","id","length","isDone","map","task","filter","taskId","description","updatedDescription"],"sources":["D:/BootCamp MERN Stack/redux-checkpoint/src/reducers/taskReducer.js"],"sourcesContent":["const initialState = {\r\n    tasks: [], // initialisez tasks comme un tableau vide ou avec des tâches initiales\r\n  };\r\n  \r\n  const taskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case 'ADD_TASK':\r\n        return {\r\n          ...state,\r\n          tasks: [...state.tasks, { ...action.payload, id: state.tasks.length + 1, isDone: false }],\r\n        };\r\n      case 'TOGGLE_TASK':\r\n        return {\r\n          ...state,\r\n          tasks: state.tasks.map((task) =>\r\n            task.id === action.payload ? { ...task, isDone: !task.isDone } : task\r\n          ),\r\n        };\r\n      case 'DELETE_TASK':\r\n        return {\r\n          ...state,\r\n          tasks: state.tasks.filter((task) => task.id !== action.payload),\r\n        };\r\n      case 'EDIT_TASK':\r\n        return {\r\n          ...state,\r\n          tasks: state.tasks.map((task) =>\r\n            task.id === action.payload.taskId\r\n              ? { ...task, description: action.payload.updatedDescription }\r\n              : task\r\n          ),\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default taskReducer;\r\n  "],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE,CAAE;AACb,CAAC;;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QACL,GAAGF,KAAK;QACRF,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAK,EAAE;UAAE,GAAGG,MAAM,CAACE,OAAO;UAAEC,EAAE,EAAEJ,KAAK,CAACF,KAAK,CAACO,MAAM,GAAG,CAAC;UAAEC,MAAM,EAAE;QAAM,CAAC;MAC1F,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGN,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACS,GAAG,CAAEC,IAAI,IAC1BA,IAAI,CAACJ,EAAE,KAAKH,MAAM,CAACE,OAAO,GAAG;UAAE,GAAGK,IAAI;UAAEF,MAAM,EAAE,CAACE,IAAI,CAACF;QAAO,CAAC,GAAGE,IACnE;MACF,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGR,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACW,MAAM,CAAED,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKH,MAAM,CAACE,OAAO;MAChE,CAAC;IACH,KAAK,WAAW;MACd,OAAO;QACL,GAAGH,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACS,GAAG,CAAEC,IAAI,IAC1BA,IAAI,CAACJ,EAAE,KAAKH,MAAM,CAACE,OAAO,CAACO,MAAM,GAC7B;UAAE,GAAGF,IAAI;UAAEG,WAAW,EAAEV,MAAM,CAACE,OAAO,CAACS;QAAmB,CAAC,GAC3DJ,IACN;MACF,CAAC;IACH;MACE,OAAOR,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}